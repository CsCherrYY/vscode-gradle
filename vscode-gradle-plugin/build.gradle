import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
  id 'com.diffplug.gradle.spotless'
  id 'java-gradle-plugin'
  id 'com.github.johnrengelman.shadow' version '6.0.0'
}

description = 'vscode-gradle :: vscode-gradle-plugin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations.compile.dependencies.remove dependencies.gradleApi()

dependencies {
  shadow gradleApi()
  shadow localGroovy()
  testImplementation 'junit:junit:4.12'
  testImplementation gradleTestKit()
}

gradlePlugin {
  plugins {
    vscodeproject {
      id = 'com.github.badsyntax.vscodegradleplugin.vscodeproject'
      implementationClass = 'com.github.badsyntax.vscodegradleplugin.VsCodeProjectPlugin'
    }
  }
}

sourceSets {
  libsDirName = file('../extension/lib')
  functionalTest {

  }
}

spotless {
  java {
    googleJavaFormat()
    removeUnusedImports()
    trimTrailingWhitespace()
    targetExclude "build/**"
  }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

task functionalTest(type: Test) {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
  dependsOn(tasks.functionalTest)
}

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar
